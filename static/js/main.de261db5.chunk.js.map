{"version":3,"sources":["fetchRequests.js","store/store.js","components/Header.js","components/LikeIndicator.js","components/MessageItem.js","components/MakeAccountCard.js","components/MakePostCard.js","components/MessageList.js","views/Home.js","views/Login.js","views/Signup.js","components/UserHeader.js","views/Userpage.js","views/Edit.js","views/TestHub.js","views/NotFound.js","components/AlertsModals.js","App.js","index.js"],"names":["cache","users","baseURL","loginRequest","username","password","fetch","method","headers","body","JSON","stringify","then","res","json","deleteMessage","token","messageId","Authorization","addLike","getMessages","limit","offset","queryParams","undefined","push","length","join","updateUser","displayName","about","createMessage","text","createNewUser","getUser","useCache","cached","request","a","getPicture","user","pictureRaw","resp","ok","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","deleteUser","removeLike","likeId","makeAlert","entropy","header","id","String","Number","Date","useStore","create","devtools","set","login","loginResp","userData","state","alerts","message","logout","statusCode","signup","edit","deleteAccount","messages","lastMessagesUser","removeMessage","filter","msg","addMessage","loadMoreMessages","differentUsername","hasMore","clearMessages","likeMessage","index","findIndex","newMessage","likes","like","newMessages","splice","unlikeMessage","removeAlert","clearAlerts","Header","props","Navbar","bg","expand","sticky","Brand","className","as","Link","to","Dropdown","Toggle","variant","Card","Title","Subtitle","width","height","src","alt","Menu","Item","onClick","Button","LikeIndicator","useState","setUser","useEffect","OverlayTrigger","delay","overlay","Tooltip","MessageItem","date","currentUser","deleting","setDeleting","liking","setLiking","unliking","setUnliking","event","find","buttonSpinner","spin","Spinner","animation","size","role","aria-hidden","style","opacity","Body","disabled","Text","createdAt","toLocaleDateString","year","month","day","toLocaleTimeString","timeStyle","Footer","map","i","MakeAccountCard","posting","setPosting","useRef","preventDefault","current","value","Form","Group","Control","rows","placeholder","ref","type","MessageList","dataLength","next","loader","Container","fluid","endMessage","refreshFunction","pullDownToRefresh","pullDownToRefreshThreshold","pullDownToRefreshContent","releaseToRefreshContent","MakePostCard","Home","Signup","loggingIn","setLoggingIn","loggedIn","setLoggedIn","Label","creating","setCreating","displayname","UserHeader","block","Userpage","match","params","Edit","editing","setEditing","redirect","setRedirect","showModal","setShowModal","readOnly","Modal","show","onHide","handleDelete","StoreTester","e","m","TestHub","NotFound","location","pathname","clearStage","setClearStage","stageTimer","clearTimeout","setTimeout","onMouseMove","visibility","alert","Alert","onClose","dismissible","Heading","App","exact","path","component","Login","AlertsModals","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"wRAAMA,EAAQ,CACZC,MAAM,IAGFC,EACJ,uCAKWC,EAAe,SAACC,EAAUC,GACrC,OAAOC,MAAMJ,EAAU,aAAc,CACnCK,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBP,WACAC,eAEDO,MAAK,SAACC,GAAD,OAASA,EAAIC,WASVC,EAAgB,SAACC,EAAOC,GACnC,OAAOX,MAAMJ,EAAU,YAAce,EAAW,CAC9CV,OAAQ,SACRC,QAAS,CAAEU,cAAe,UAAYF,KACrCJ,MAAM,SAAAC,GAAG,OAAIA,EAAIC,WAGTK,EAAU,SAACH,EAAOC,GAC7B,OAAOX,MAAMJ,EAAU,QAAS,CAC9BK,OAAQ,OACRC,QAAS,CAAEU,cAAe,UAAYF,EAAO,eAAgB,oBAC7DP,KAAMC,KAAKC,UAAU,CACnBM,gBAEDL,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGVM,EAAc,SAACC,EAAOC,EAAQlB,GACzC,IAAImB,EAAc,GAKlB,YAJcC,IAAVH,GAAqBE,EAAYE,KAAK,SAASJ,QACpCG,IAAXF,GAAsBC,EAAYE,KAAK,UAAUH,QACpCE,IAAbpB,GAAwBmB,EAAYE,KAAK,YAAYrB,GACzDmB,EAAsC,IAAvBA,EAAYG,OAAgB,GAAK,IAAMH,EAAYI,KAAK,KAChErB,MAAMJ,EAAU,WAAaqB,GAAaX,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGxDc,EAAa,SAACZ,EAAOZ,EAAUyB,EAAaxB,EAAUyB,GACjE,OAAOxB,MAAMJ,EAAU,SAAWE,EAAU,CAC1CG,OAAQ,QACRC,QAAS,CAAEU,cAAe,UAAYF,EAAO,eAAgB,oBAC7DP,KAAMC,KAAKC,UAAU,CACnBN,WACAyB,QACAD,kBAEDjB,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGViB,EAAgB,SAACf,EAAOgB,GACnC,OAAO1B,MAAOJ,EAAU,WAAY,CAClCK,OAAQ,OACRC,QAAS,CAAEU,cAAe,UAAYF,EAAO,eAAgB,oBAC7DP,KAAMC,KAAKC,UAAU,CACnBqB,WAEDpB,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGVmB,EAAgB,SAAC7B,EAAUyB,EAAaxB,GACnD,OAAOC,MAAMJ,EAAU,QAAS,CAC9BK,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBP,WACAyB,cACAxB,eAEDO,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGVoB,EAAU,SAAC9B,GAA6B,IAAnB+B,IAAkB,yDAC9CC,EAASpC,EAAMC,MAAMG,GACzB,GAAIgC,GAAUD,EAAU,OAAOC,EAC/B,IAAIC,EAAU/B,MAAMJ,EAAU,SAAWE,GAAUQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,KAA7D,uCAAkE,WAAOC,GAAP,SAAAyB,EAAA,sEAClDC,EAAW1B,EAAI2B,KAAKpC,UAD8B,cAC9ES,EAAI2B,KAAKC,WADqE,yBAEvE5B,GAFuE,2CAAlE,uDAKd,OADAb,EAAMC,MAAMG,GAAYiC,EACjBA,GAGIE,EAAU,uCAAG,WAAOnC,GAAP,eAAAkC,EAAA,sEACPhC,MAAMJ,EAAO,gBAAYE,EAAZ,aADN,YACpBsC,EADoB,QAEfC,GAFe,6BAGTC,EAHS,SAGiBF,EAAKG,OAHtB,6HAKf,oBALe,4CAAH,sDASjBD,EAAsB,SAAAC,GAAI,OAAI,IAAIC,SAAQ,SAACC,EAASC,GACxD,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,QAAUH,EACjBC,EAAOG,OAAS,WACZL,EAAQE,EAAOI,SAEnBJ,EAAOK,cAAcT,OAGVU,EAAa,SAACvC,EAAOZ,GAChC,OAAOE,MAAMJ,EAAU,SAAWE,EAAU,CAC1CG,OAAQ,SACRC,QAAS,CAAEU,cAAe,UAAYF,KACrCJ,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGV0C,EAAa,SAACxC,EAAOyC,GAChC,OAAOnD,MAAMJ,EAAU,SAAWuD,EAAQ,CACxClD,OAAQ,SACRC,QAAS,CAAEU,cAAe,UAAYF,KACrCJ,MAAK,SAACC,GAAD,OAASA,EAAIC,WC3HjB4C,EAAY,SAASC,EAASC,EAAQnD,GAC1C,MAAO,CACLoD,GAAIC,OAAOC,OAAO,IAAIC,OAASL,EAC/BC,SACAnD,SAyISwD,EAAWC,YAAOC,oBApIf,SAACC,GAAD,MAAU,CAExB5B,KAAM,CAACxB,MAAO,IACdqD,MAAM,WAAD,4BAAE,WAAOjE,EAAUC,GAAjB,iBAAAiC,EAAA,sEACiBnC,EAAaC,EAAUC,GADxC,YACDiE,EADC,QAESlE,SAFT,iCAGkB8B,EAAQoC,EAAUlE,UAAU,GAH9C,cAGCmE,EAHD,OAIHH,GAAI,SAAAI,GAAK,MAAK,CAAChC,KAAK,2BAAK8B,GAAcC,EAAS/B,UAJ7C,mBAKI,GALJ,eAOH4B,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,mBAAoB4C,EAAUI,eAPlG,mBAQI,GARJ,4CAAF,qDAAC,GAWNC,OAAO,WAAD,4BAAE,sBAAArC,EAAA,+EAAY8B,EAAG,uCAAC,WAAMI,GAAN,eAAAlC,EAAA,sEDNItB,ECOKwD,EAAMhC,KAAKxB,MDNrCV,MAAMJ,EAAU,cAAe,CACpCM,QAAS,CAAEU,cAAe,UAAYF,KACrCJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UCGG,UAEE,OADpB4B,EADkB,QAEbkC,WAFa,uBAGpBR,GAAI,SAAAI,GAAK,MAAK,CAAChC,KAAM,CAACxB,MAAO,QAHT,mBAIb,GAJa,cAMpBoD,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,oBAAqBgB,EAAKgC,eAN7E,mBAOb,GAPa,kCDNG,IAAC1D,ICMJ,OAAD,wDAAf,2CAAF,kDAAC,GAUP6D,OAAO,WAAD,4BAAE,WAAOzE,EAAUyB,EAAaxB,GAA9B,eAAAiC,EAAA,sEACWL,EAAc7B,EAAUyB,EAAaxB,GADhD,UAEkB,OADpBqC,EADE,QAEGkC,WAFH,0CAGG,GAHH,cAKJR,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,yBAA0BgB,EAAKgC,eALlG,mBAMG,GANH,2CAAF,uDAAC,GASPI,KAAK,WAAD,4BAAE,WAAO9D,EAAOZ,EAAUyB,EAAaxB,EAAUyB,GAA/C,eAAAQ,EAAA,sEACaV,EAAWZ,EAAOZ,EAAUyB,EAAaxB,EAAUyB,GADhE,UAEoB,OADpBY,EADA,QAEKkC,WAFL,0CAGK,GAHL,cAKFR,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,yBAA0BgB,EAAKgC,eALpG,mBAMK,GANL,2CAAF,2DAAC,GASLK,cAAc,WAAD,4BAAE,WAAO/D,EAAOZ,GAAd,eAAAkC,EAAA,sEACIiB,EAAWvC,EAAOZ,GADtB,UAEW,OADpBsC,EADS,QAEJkC,WAFI,uBAGXR,GAAI,SAAAI,GAAK,MAAK,CAAChC,KAAM,CAACxB,MAAO,QAHlB,mBAIJ,GAJI,cAMXoD,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,yBAA0BgB,EAAKgC,eAN3F,mBAOJ,GAPI,4CAAF,qDAAC,GAWdM,SAAU,GACVC,sBAAkBzD,EAClB0D,cAAc,WAAD,4BAAE,WAAOlE,EAAOC,GAAd,eAAAqB,EAAA,sEACIvB,EAAcC,EAAOC,GADzB,UAEW,OADpByB,EADS,QAEJkC,WAFI,uBAGXR,GAAI,SAAAI,GAAK,MAAK,CAACQ,SAASR,EAAMQ,SAASG,QAAO,SAAAC,GAAG,OAAIA,EAAIvB,KAAO5C,SAHrD,mBAIJ,GAJI,cAMXmD,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,yBAA0BgB,EAAKgC,eAN3F,mBAOJ,GAPI,4CAAF,qDAAC,GAUdW,WAAW,WAAD,4BAAE,WAAOrE,EAAOgB,GAAd,eAAAM,EAAA,sEACOP,EAAcf,EAAOgB,GAD5B,UAEc,OADpBU,EADM,QAEDkC,WAFC,uBAGRR,GAAI,SAAAI,GAAK,MAAK,CAACQ,SAAS,CAACtC,EAAKgC,SAAP,mBAAmBF,EAAMQ,eAHxC,mBAID,GAJC,cAMRZ,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,wBAAyBgB,EAAKgC,eAN7F,mBAOD,GAPC,4CAAF,qDAAC,GAUXY,iBAAkB,SAAClF,GAAD,OAAcgE,EAAG,uCAAC,WAAMI,GAAN,iBAAAlC,EAAA,6DAE5BiD,EAAoBf,EAAMS,mBAAqB7E,EAFnB,SAGjBgB,EAAY,GAAImE,EAAoB,EAAIf,EAAMQ,SAAStD,OAAQtB,GAH9C,QAG9BsC,EAH8B,QAIzBsC,SAAStD,OAAS,EACzB0C,GAAI,SAAAI,GAAK,MAAK,CACZQ,SAAS,GAAD,mBAAOO,EAAoB,GAAKf,EAAMQ,UAAtC,YAAoDtC,EAAKsC,WACjEC,iBAAkB7E,EAClBoF,SAAS,MAGXpB,GAAI,SAAAI,GAAK,MAAK,CAACgB,SAAS,MAXQ,2CAAD,wDAcnCC,cAAe,kBAAMrB,GAAI,SAAAI,GAAK,MAAK,CAACQ,SAAS,QAC7CQ,SAAS,EACTE,YAAY,WAAD,4BAAE,WAAO1E,EAAOC,GAAd,eAAAqB,EAAA,sEACMnB,EAAQH,EAAOC,GADrB,UAEa,OADpByB,EADO,QAEFkC,WAFE,uBAGTR,GAAI,SAAAI,GACF,IAAImB,EAAQnB,EAAMQ,SAASY,WAAU,SAAAR,GAAG,OAAIA,EAAIvB,KAAO5C,KACnD4E,EAAU,eAAOrB,EAAMQ,SAASW,IACpCE,EAAWC,MAAX,sBAAuBD,EAAWC,OAAlC,CAAyCpD,EAAKqD,OAC9C,IAAIC,EAAW,YAAOxB,EAAMQ,UAE5B,OADAgB,EAAYC,OAAON,EAAO,EAAGE,GACtB,CAACb,SAASgB,MATV,mBAWF,GAXE,cAaT5B,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,uBAAwBgB,EAAKgC,eAb3F,mBAcF,GAdE,4CAAF,qDAAC,GAiBZwB,cAAc,WAAD,4BAAE,WAAOlF,EAAOC,EAAWwC,GAAzB,eAAAnB,EAAA,sEACIkB,EAAWxC,EAAOyC,GADtB,UAEW,OADpBf,EADS,QAEJkC,WAFI,uBAGXR,GAAI,SAAAI,GACF,IAAImB,EAAQnB,EAAMQ,SAASY,WAAU,SAAAR,GAAG,OAAIA,EAAIvB,KAAO5C,KACnD4E,EAAU,eAAOrB,EAAMQ,SAASW,IACpCE,EAAWC,MAAQD,EAAWC,MAAMX,QAAO,SAAAY,GAAI,OAAIA,EAAKlC,KAAOnB,EAAKmB,MACpE,IAAImC,EAAW,YAAOxB,EAAMQ,UAE5B,OADAgB,EAAYC,OAAON,EAAO,EAAGE,GACtB,CAACb,SAASgB,MATR,mBAWJ,GAXI,cAaX5B,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,GAAD,mBAAKD,EAAMC,QAAX,CAAmBf,EAAUc,EAAMC,OAAO/C,OAAQ,uBAAwBgB,EAAKgC,eAbzF,mBAcJ,GAdI,4CAAF,uDAAC,GAkBdD,OAAQ,GACR0B,YAAa,SAACtC,GAAD,OAAQO,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAOD,EAAMC,OAAOU,QAAO,SAAA7C,GAAC,OAAIA,EAAEuB,KAAOA,UAC7EuC,YAAa,kBAAMhC,GAAI,SAAAI,GAAK,MAAK,CAACC,OAAO,a,+BChG5B4B,MArCf,SAAgBC,GACd,IAAM9D,EAAOyB,GAAS,SAACO,GAAD,OAAWA,EAAMhC,QACjCmC,EAASV,GAAS,SAACO,GAAD,OAAWA,EAAMG,UAOzC,OACA,mCACE,eAAC4B,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKC,OAAO,MAAtC,UACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,UAAU,UAAUC,GAAIC,IAAMC,GAAG,IAA/C,0BACCvE,EAAKxB,MACN,eAACgG,EAAA,EAAD,CAAUJ,UAAU,qBAApB,UACE,cAACI,EAAA,EAASC,OAAV,CAAiBC,QAAQ,OAAzB,SACE,sBAAKN,UAAU,aAAf,UACE,gCACE,cAACO,EAAA,EAAKC,MAAN,UAAa5E,EAAKX,aAAe,iBACjC,eAACsF,EAAA,EAAKE,SAAN,CAAeT,UAAU,kBAAzB,cAA6CpE,EAAKpC,eAEpD,qBAAKkH,MAAO,GAAIC,OAAQ,GAAIX,UAAU,OAAOY,IAAKhF,EAAKC,WAAYgF,IAAI,qBAG3E,eAACT,EAAA,EAASU,KAAV,WACE,cAACV,EAAA,EAASW,KAAV,CAAed,GAAIC,IAAMC,GAAI,SAASvE,EAAKpC,SAA3C,qBACA,cAAC4G,EAAA,EAASW,KAAV,CAAeC,QArBvB,WACEjD,KAoBM,4BAIJ,cAAC,IAAD,CAAMoC,GAAG,SAAT,SAAkB,cAACc,EAAA,EAAD,CAAQX,QAAQ,kBAAhB,6B,gCCdTY,MAjBf,SAAuBxB,GAAQ,IAAD,EACJyB,mBAAS,IADL,mBACrBvF,EADqB,KACfwF,EADe,KAO5B,OAJAC,qBAAU,WACR/F,EAAQoE,EAAMP,KAAK3F,UAAUQ,MAAK,SAAA8B,GAAI,OAAIsF,EAAQtF,EAAKF,WACtD,CAAC8D,EAAMP,KAAK3F,WAGb,cAAC8H,EAAA,EAAD,CAAgBC,MAAO,IAAKC,QAAS,eAACC,EAAA,EAAD,eAAW/B,EAAMP,KAAK3F,YAA3D,SACE,cAAC,IAAD,CAAM2G,GAAI,SAAST,EAAMP,KAAK3F,SAA9B,SACE,qBAAKkH,MAAO,GAAIC,OAAQ,GAAIC,IAAKhF,EAAKC,WAAYgF,IAAI,UCiF/Ca,MAxFf,SAAqBhC,GACnB,IAoCuBiC,EApCjBC,EAAcvE,GAAS,SAACO,GAAD,OAAWA,EAAMhC,QADpB,EAE4ByB,GAAS,SAACO,GAAD,OAAWA,KAAlEU,EAFkB,EAElBA,cAAeQ,EAFG,EAEHA,YAAaQ,EAFV,EAEUA,cAFV,EAGF6B,mBAAS,IAHP,mBAGnBvF,EAHmB,KAGbwF,EAHa,OAIMD,oBAAS,GAJf,mBAInBU,EAJmB,KAITC,EAJS,OAKEX,oBAAS,GALX,mBAKnBY,EALmB,KAKXC,EALW,OAMMb,oBAAS,GANf,mBAMnBc,EANmB,KAMTC,EANS,iDAQ1B,WAA0BC,GAA1B,SAAAzG,EAAA,6DACEsG,GAAU,GADZ,SAEQlD,EAAY8C,EAAYxH,MAAOsF,EAAM5B,QAAQb,IAFrD,OAGE+E,GAAU,GAHZ,4CAR0B,kEAc1B,WAA4BG,GAA5B,eAAAzG,EAAA,6DACEwG,GAAY,GACRrF,EAAS6C,EAAM5B,QAAQoB,MAAMkD,MAAK,SAAAjD,GAAI,OAAIA,EAAK3F,WAAaoI,EAAYpI,YAAUyD,GAFxF,SAGQqC,EAAcsC,EAAYxH,MAAOsF,EAAM5B,QAAQb,GAAIJ,GAH3D,OAIEqF,GAAY,GAJd,4CAd0B,kEAqB1B,WAA4BC,GAA5B,SAAAzG,EAAA,6DACEoG,GAAY,GADd,SAEaxD,EAAcsD,EAAYxH,MAAOsF,EAAM5B,QAAQb,IAF5D,iCAGI6E,GAAY,GAHhB,4CArB0B,sBAgC1B,SAASO,EAAcjH,EAAMkH,GAC3B,OAAKA,EACE,qCAAE,cAACC,EAAA,EAAD,CAAStC,GAAG,OAAOuC,UAAU,SAASC,KAAK,KAAKC,KAAK,SAASC,cAAY,SAA5E,IAAqF,+BAAOvH,OADjF,+BAAOA,IAY3B,OAjBAiG,qBAAU,WACR/F,EAAQoE,EAAM5B,QAAQtE,UAAUQ,MAAK,SAAA8B,GAAI,OAAIsF,EAAQtF,EAAKF,WACzD,CAAC8D,EAAM5B,QAAQtE,WAgBhB,mCACE,eAAC+G,EAAA,EAAD,CAAMP,UAAU,oBAAoB4C,MAAO,CAACC,QAAQhB,EAAS,GAAI,GAAjE,UACE,eAACtB,EAAA,EAAKuC,KAAN,WACE,sBAAK9C,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMG,GAAI,SAASvE,EAAKpC,SAAxB,SACE,qBAAKkH,MAAO,GAAIC,OAAQ,GAAIX,UAAU,OAAOY,IAAKhF,EAAKC,WAAYgF,IAAI,OAEzE,gCACE,cAAC,IAAD,CAAMV,GAAI,SAASvE,EAAKpC,SAAxB,SAAkC,cAAC+G,EAAA,EAAKC,MAAN,UAAa5E,EAAKX,gBACpD,cAAC,IAAD,CAAMkF,GAAI,SAASvE,EAAKpC,SAAxB,SAAkC,eAAC+G,EAAA,EAAKE,SAAN,CAAeT,UAAU,kBAAzB,cAA6CN,EAAM5B,QAAQtE,iBAE/F,8BACGkG,EAAM5B,QAAQtE,WAAaoI,EAAYpI,UAAY,+BAClD,cAACyH,EAAA,EAAD,CAAQX,QAAQ,iBAAiBU,QA3DrB,4CA2D4C+B,SAAUlB,GAAYE,GAAUE,EAAUjC,UAAU,OAA5G,SACGqC,EAAc,SAAUR,YAKjC,cAACtB,EAAA,EAAKyC,KAAN,CAAWhD,UAAU,OAArB,SACGN,EAAM5B,QAAQ1C,OAEjB,eAACmF,EAAA,EAAKyC,KAAN,CAAWhD,UAAU,6BAArB,qBA/Be2B,EAgCS,IAAIvE,KAAKsC,EAAM5B,QAAQmF,WA9BnDtB,EAAKuB,mBAAmB,GAAI,CAAEC,KAAK,UAAWC,MAAM,QAASC,IAAI,YACjE,OACA1B,EAAK2B,mBAAmB,GAAI,CAACC,UAAW,iBA+BtC,eAAChD,EAAA,EAAKiD,OAAN,CAAaxD,UAAU,UAAvB,UACI,uBAAMA,UAAU,kBAAhB,UAAmCN,EAAM5B,QAAQoB,MAAMpE,OAAvD,QAAmG,IAA/B4E,EAAM5B,QAAQoB,MAAMpE,OAAe,GAAK,OAC5G,+BAAO4E,EAAM5B,QAAQoB,MAAMuE,KAAI,SAACtE,EAAMuE,GAAP,OAAa,cAAC,EAAD,CAAyDvE,KAAMA,GAA3C,IAAIO,EAAM5B,QAAQb,GAAG,OAAOkC,EAAKlC,SACjG,qBAAK+C,UAAU,cAAf,UACuF,IAAnFN,EAAM5B,QAAQoB,MAAMF,WAAU,SAAAG,GAAI,OAAIA,EAAK3F,WAAaoI,EAAYpI,YACpE,cAACyH,EAAA,EAAD,CAAQX,QAAQ,eAAeU,QA7EnB,4CA6E0C+B,UAAYnB,EAAYxH,OAAUyH,GAAYE,GAAUE,EAA9G,SAAyHI,EAAc,SAAUJ,KAEjJ,cAAChB,EAAA,EAAD,CAAQX,QAAQ,UAAUU,QA/Ed,4CA+EmC+B,UAAYnB,EAAYxH,OAAUyH,GAAYE,GAAUE,EAAvG,SAAkHI,EAAc,OAAQN,gBCrEzI4B,MAff,SAAyBjE,GAEvB,OACE,cAACa,EAAA,EAAD,CAAMP,UAAU,+BAAhB,SACE,eAACO,EAAA,EAAKuC,KAAN,WACE,oBAAI9C,UAAU,YAAd,0DACA,cAAC,IAAD,CAAMG,GAAG,UAAT,SAAmB,cAACc,EAAA,EAAD,CAAQX,QAAQ,UAAUmC,KAAK,KAA/B,8BACnB,eAAClC,EAAA,EAAKyC,KAAN,CAAWhD,UAAU,OAArB,+BACoB,cAAC,IAAD,CAAMG,GAAG,SAAT,8B,OC+BbwD,MApCf,SAAyBjE,GAAQ,IAAD,EACDrC,GAAS,SAACO,GAAD,OAAWA,KAAzChC,EADsB,EACtBA,KAAM6C,EADgB,EAChBA,WADgB,EAEA0C,oBAAS,GAFT,mBAEvByC,EAFuB,KAEdC,EAFc,KAGxBzI,EAAO0I,mBAHiB,4CAM9B,WAA0B3B,GAA1B,SAAAzG,EAAA,yDACEmI,GAAW,GACX1B,EAAM4B,iBAFR,KAGM3I,EAAK4I,QAAQC,MAAMnJ,QAAU,GAHnC,qCAG8C2D,EAAW7C,EAAKxB,MAAOgB,EAAK4I,QAAQC,OAHlF,mDAII7I,EAAK4I,QAAQC,MAAQ,GAJzB,OAMEJ,GAAW,GANb,6CAN8B,sBAoB9B,OACE,cAACtD,EAAA,EAAD,CAAMP,UAAU,iBAAhB,SACE,cAACO,EAAA,EAAKuC,KAAN,UACC,eAACoB,EAAA,EAAD,WACG,cAACA,EAAA,EAAKC,MAAN,UACE,cAACD,EAAA,EAAKE,QAAN,CAAcnE,GAAG,WAAWwC,KAAK,KAAK4B,KAAM,EAAGC,YAAY,mBAAmBC,IAAKnJ,EAAM2H,SAAUa,MAErG,qBAAK5D,UAAU,cAAf,SACE,cAACiB,EAAA,EAAD,CAAQX,QAAQ,UAAUkE,KAAK,SAASxD,QA5BpB,4CA4ByC+B,SAAUa,EAAvE,SAbV,SAAuBxI,EAAMkH,GAC3B,OAAKA,EACE,qCAAE,cAACC,EAAA,EAAD,CAAStC,GAAG,OAAOuC,UAAU,SAASC,KAAK,KAAKC,KAAK,SAASC,cAAY,SAA5E,IAAqF,+BAAOvH,OADjF,+BAAOA,IAYgEiH,CAAc,OAAQuB,e,gBCqCpGa,MA5Df,SAAqB/E,GAAQ,IAAD,EAC2CrC,GAAS,SAAAO,GAAK,OAAIA,KAA/EhC,EADkB,EAClBA,KAAMwC,EADY,EACZA,SAAUM,EADE,EACFA,iBAAkBG,EADhB,EACgBA,cAAeD,EAD/B,EAC+BA,QAezD,OAJAyC,qBAAU,WACR3C,EAAiBgB,EAAMlG,YACtB,CAACkF,EAAkBgB,EAAMlG,WAG1B,cAAC,IAAD,CACEkL,WAAYtG,EAAStD,OACrB6J,KAhBJ,SAAsBxC,GACpBzD,EAAiBgB,EAAMlG,WAgBrBoF,QAASA,EACTgG,OAAQ,cAACC,EAAA,EAAD,CAAWC,MAAM,KAAjB,SACE,cAACvE,EAAA,EAAD,CAAMP,UAAU,6BAAhB,SACE,cAACuC,EAAA,EAAD,CAASC,UAAU,SAASE,KAAK,SAAjC,SACE,sBAAM1C,UAAU,UAAhB,8BAId+E,WAAY,cAACF,EAAA,EAAD,CAAWC,MAAM,YAAjB,SACE,cAAC7D,EAAA,EAAD,CAAQX,QAAQ,oBAAoByC,UAAU,EAAM/C,UAAU,YAA9D,wCAEdgF,gBAxBJ,SAAuB7C,GACrBtD,IACAH,EAAiBgB,EAAMlG,WAuBrByL,mBAAiB,EACjBC,2BAA4B,GAC5BC,yBACE,cAACN,EAAA,EAAD,CAAWC,MAAM,YAAjB,SACE,cAAC7D,EAAA,EAAD,CAAQX,QAAQ,oBAAoByC,UAAU,EAAM/C,UAAU,YAA9D,2CAGJoF,wBACE,cAACP,EAAA,EAAD,CAAWC,MAAM,YAAjB,SACE,cAAC7D,EAAA,EAAD,CAAQX,QAAQ,oBAAoByC,UAAU,EAAM/C,UAAU,YAA9D,yCAxBN,SA2BI,eAAC6E,EAAA,EAAD,CAAWC,MAAM,KAAjB,UACGpF,EAAMlG,SACJoC,EAAKxB,OAASsF,EAAMlG,WAAaoC,EAAKpC,SAAY,cAAC6L,EAAD,IAAmB,GAErEzJ,EAAKxB,MAAS,cAACiL,EAAD,IAAmB,cAAC,EAAD,IAEnCjH,EAASqF,KAAI,SAAAjF,GAAG,OACf,cAAC,EAAD,CAA8BV,QAASU,GAArB,IAAIA,EAAIvB,aCnDvBqI,MATf,SAAc5F,GACZ,OACA,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QC0DW6F,MAzDf,SAAgB7F,GAAQ,IAqBCtE,EAAMkH,EArBR,EACanB,oBAAS,GADtB,mBACdqE,EADc,KACHC,EADG,OAEWtE,oBAAS,GAFpB,mBAEduE,EAFc,KAEJC,EAFI,OAIItI,GAAS,SAACO,GAAD,OAAWA,KAAtCH,EAJc,EAIdA,MAEDjE,GANe,EAIPyE,OAEG6F,oBACXrK,EAAWqK,mBAPI,4CASrB,WAA4B3B,GAA5B,SAAAzG,EAAA,yDACE+J,GAAa,GACbtD,EAAM4B,iBAFR,KAIIvK,EAASwK,QAAQC,OAASxK,EAASuK,QAAQC,OAJ/C,qCAKUxG,EAAMjE,EAASwK,QAAQC,MAAOxK,EAASuK,QAAQC,OALzD,mDAOI0B,GAAY,GAPhB,OASEF,GAAa,GATf,6CATqB,sBA2BrB,OAAIC,EAEF,cAAC,IAAD,CAAUvF,GAAG,MAIb,mCACC,eAAC0E,EAAA,EAAD,CAAWC,MAAM,KAAK9E,UAAU,OAAhC,UACG,qDACA,eAACkE,EAAA,EAAD,CAAMlE,UAAU,OAAhB,UACE,eAACkE,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,uBACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcI,KAAK,OAAOF,YAAY,WAAWC,IAAK/K,EAAUuJ,SAAUyC,OAG5E,eAACtB,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,uBACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcI,KAAK,WAAWF,YAAY,WAAWC,IAAK9K,EAAUsJ,SAAUyC,OAGhF,cAACvE,EAAA,EAAD,CAAQX,QAAQ,UAAUkE,KAAK,SAASxD,QA/C3B,4CA+CkD+B,SAAUyC,EAAzE,UA1BepK,EA2BE,UA3BIkH,EA2BOkD,EA1B7BlD,EACE,qCAAE,cAACC,EAAA,EAAD,CAAStC,GAAG,OAAOuC,UAAU,SAASC,KAAK,KAAKC,KAAK,SAASC,cAAY,SAA5E,IAAqF,+BAAOvH,OADjF,+BAAOA,gBC8CdmK,MApEf,SAAgB7F,GAAQ,IAuBCtE,EAAMkH,EAvBR,EACWnB,oBAAS,GADpB,mBACd0E,EADc,KACJC,EADI,OAEW3E,oBAAS,GAFpB,mBAEduE,EAFc,KAEJC,EAFI,OAIItI,GAAS,SAACO,GAAD,OAAWA,KAAtCH,EAJc,EAIdA,MAAOQ,EAJO,EAIPA,OAERzE,EAAWsK,mBACXiC,EAAcjC,mBACdrK,EAAWqK,mBARI,4CAUrB,WAA4B3B,GAA5B,SAAAzG,EAAA,yDACEoK,GAAY,GACZ3D,EAAM4B,iBAFR,KAIIvK,EAASwK,QAAQC,OAAS8B,EAAY/B,QAAQC,OAASxK,EAASuK,QAAQC,OAJ5E,qCAKUhG,EAAOzE,EAASwK,QAAQC,MAAO8B,EAAY/B,QAAQC,MAAOxK,EAASuK,QAAQC,OALrF,+EAMUxG,EAAMjE,EAASwK,QAAQC,MAAOxK,EAASuK,QAAQC,OANzD,sDAQI0B,GAAY,GARhB,QAUEG,GAAY,GAVd,6CAVqB,sBA6BrB,OAAIJ,EAEF,cAAC,IAAD,CAAUvF,GAAG,MAIb,mCACC,eAAC0E,EAAA,EAAD,CAAWC,MAAM,KAAK9E,UAAU,OAAhC,UACG,qDACA,eAACkE,EAAA,EAAD,CAAMlE,UAAU,OAAhB,UACE,eAACkE,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,8BACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcI,KAAK,OAAOF,YAAY,WAAWC,IAAK/K,EAAUuJ,SAAU8C,IAC1E,cAAC3B,EAAA,EAAKlB,KAAN,CAAWhD,UAAU,aAArB,yDAKF,eAACkE,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,2BACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcI,KAAK,OAAOF,YAAY,eAAeC,IAAKwB,EAAahD,SAAU8C,OAInF,eAAC3B,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,8BACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcI,KAAK,WAAWF,YAAY,WAAWC,IAAK9K,EAAUsJ,SAAU8C,OAGhF,cAAC5E,EAAA,EAAD,CAAQX,QAAQ,UAAUkE,KAAK,SAASxD,QA1D3B,4CA0DkD+B,SAAU8C,EAAzE,UAnCezK,EAoCE,iBApCIkH,EAoCcuD,EAnCpCvD,EACE,qCAAE,cAACC,EAAA,EAAD,CAAStC,GAAG,OAAOuC,UAAU,SAASC,KAAK,KAAKC,KAAK,SAASC,cAAY,SAA5E,IAAqF,+BAAOvH,OADjF,+BAAOA,gBCad4K,MAtCf,SAAoBtG,GAClB,IAAMkC,EAAcvE,GAAS,SAACO,GAAD,OAAWA,EAAMhC,QADrB,EAEDuF,mBAAS,IAFR,mBAElBvF,EAFkB,KAEZwF,EAFY,KAQzB,OAJAC,qBAAU,WACR/F,EAAQoE,EAAMlG,UAAUQ,MAAK,SAAA8B,GAAI,OAAIsF,EAAQtF,EAAKF,WACjD,CAAC8D,EAAMlG,WAGR,mCACE,eAACmG,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKC,OAAO,MAAtC,UACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,UAAU,GAAGC,GAAIC,IAAMC,GAAG,IAAxC,SACE,cAACc,EAAA,EAAD,CAAQgF,OAAK,EAAC3F,QAAQ,oBAAtB,SAA2C,aAE7C,qBACEI,MAAO,IACPC,OAAQ,IACRX,UAAU,oBACVY,IAAKhF,EAAKC,WACVgF,IAAI,gBAEN,eAACN,EAAA,EAAKuC,KAAN,WACE,8BACE,gCACE,cAACvC,EAAA,EAAKC,MAAN,UAAa5E,EAAKX,cAClB,eAACsF,EAAA,EAAKE,SAAN,CAAeT,UAAU,kBAAzB,cACIpE,EAAKpC,iBAIb,cAAC+G,EAAA,EAAKyC,KAAN,UAAYpH,EAAKV,WAElBU,GAAQgG,EAAYxH,OAASwH,EAAYpI,WAAaoC,EAAKpC,UAAY,cAAC,IAAD,CAAM2G,GAAI,SAASvE,EAAKpC,SAAS,QAAjC,SAA0C,cAACyH,EAAA,EAAD,CAAQX,QAAQ,UAAhB,kCC3B3G4F,OATf,SAAkBxG,GAChB,OACE,qCACE,cAAC,EAAD,CAAYlG,SAAUkG,EAAMyG,MAAMC,OAAO5M,WACzC,cAAC,EAAD,CAAaA,SAAUkG,EAAMyG,MAAMC,OAAO5M,e,SC2HjC6M,OAzHf,SAAc3G,GAAQ,IAAD,EACWyB,oBAAS,GADpB,mBACZmF,EADY,KACHC,EADG,OAEapF,oBAAS,GAFtB,mBAEZU,EAFY,KAEFC,EAFE,OAGaX,oBAAS,GAHtB,mBAGZqF,EAHY,KAGFC,EAHE,OAIetF,oBAAS,GAJxB,mBAIZuF,EAJY,KAIDC,EAJC,OAM2BtJ,GAAS,SAACO,GAAD,OAAWA,KAA1DhC,EANW,EAMXA,KAAMsC,EANK,EAMLA,KAAMC,EAND,EAMCA,cAAeV,EANhB,EAMgBA,MAE7BjE,EAAWsK,mBACX7I,EAAc6I,mBACdrK,EAAWqK,mBACX5I,EAAQ4I,mBAXK,4CAanB,WAA4B3B,GAA5B,SAAAzG,EAAA,yDACE6K,GAAW,GACXpE,EAAM4B,iBAFR,KAGMvK,EAASwK,QAAQC,OAAShJ,EAAY+I,QAAQC,OAASxK,EAASuK,QAAQC,OAH9E,qCAIU/F,EAAKtC,EAAKxB,MAAOZ,EAASwK,QAAQC,MAAOhJ,EAAY+I,QAAQC,MAAOxK,EAASuK,QAAQC,MAAO/I,EAAM8I,QAAQC,OAJpH,qEAMUxG,EAAMjE,EAASwK,QAAQC,MAAOxK,EAASuK,QAAQC,OANzD,QAOIwC,EAAY,SAASjN,EAASwK,QAAQC,OAP1C,QASEsC,GAAW,GATb,6CAbmB,kEAyBnB,WAA4BpE,GAA5B,SAAAzG,EAAA,6DACEoG,GAAY,GACZK,EAAM4B,iBAFR,SAGY5F,EAAcvC,EAAKxB,MAAOwB,EAAKpC,UAH3C,kCAIIiN,EAAY,KAJhB,OAME3E,GAAY,GANd,4CAzBmB,sBAkCnB,SAASO,EAAcjH,EAAMkH,GAC3B,OAAKA,EACE,qCAAE,cAACC,EAAA,EAAD,CAAStC,GAAG,OAAOuC,UAAU,SAASC,KAAK,KAAKC,KAAK,SAASC,cAAY,SAA5E,IAAqF,+BAAOvH,OADjF,+BAAOA,IAc3B,OAVAiG,qBAAU,WACJzF,EAAKxB,OACPZ,EAASwK,QAAQC,MAAQrI,EAAKpC,SAC9ByB,EAAY+I,QAAQC,MAAQrI,EAAKX,YACjCC,EAAM8I,QAAQC,MAAQrI,EAAKV,OAE3BuL,EAAY,OAEb,CAAC7K,IAEA4K,EAEF,cAAC,IAAD,CAAUrG,GAAIqG,IAId,qCACC,eAAC3B,EAAA,EAAD,CAAWC,MAAM,KAAK9E,UAAU,OAAhC,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,gBAAd,+BACA,qBAAKA,UAAU,cAAf,SACI,+BACC,cAACiB,EAAA,EAAD,CAAQX,QAAQ,SAASkE,KAAK,SAASxD,QAAS,SAACmB,GAAD,OAAWwE,GAAa,IAAO5D,SAAUuD,GAAWzE,EAApG,SACGQ,EAAc,iBAAkBR,YAKzC,eAACqC,EAAA,EAAD,CAAMlE,UAAU,OAAhB,UACE,eAACkE,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,uBACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcI,KAAK,OAAOF,YAAY,WAAWC,IAAK/K,EAAUoN,UAAQ,IACxE,cAAC1C,EAAA,EAAKlB,KAAN,CAAWhD,UAAU,aAArB,4DAKF,eAACkE,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,+BACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcI,KAAK,OAAOF,YAAY,eAAeC,IAAKtJ,EAAa8H,SAAUuD,GAAWzE,OAI9F,eAACqC,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,2BACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcI,KAAK,WAAWF,YAAY,WAAWC,IAAK9K,EAAUsJ,SAAUuD,GAAWzE,OAG3F,eAACqC,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAK0B,MAAN,sBACA,cAAC1B,EAAA,EAAKE,QAAN,CAAcnE,GAAG,WAAWoE,KAAM,EAAGC,YAAY,WAAWC,IAAKrJ,EAAO6H,SAAUuD,GAAWzE,OAG/F,sBAAK7B,UAAU,cAAf,UACE,cAACiB,EAAA,EAAD,CAAQX,QAAQ,UAAUN,UAAU,OAAOwE,KAAK,SAASxD,QA7FhD,4CA6FuE+B,SAAUuD,GAAWzE,EAArG,SACGQ,EAAc,OAAQiE,KAEzB,cAACrF,EAAA,EAAD,CAAQX,QAAQ,YAAYkE,KAAK,SAASxD,QAAS,SAACmB,GAAD,OAAWsE,EAAY,SAAS7K,EAAKpC,WAAWuJ,SAAUuD,GAAWzE,EAAxH,6BAMN,eAACgF,GAAA,EAAD,CAAOC,KAAMJ,EAAWK,OAAQ,SAAC5E,GAAD,OAAWwE,GAAa,IAAxD,UACE,cAACE,GAAA,EAAMpH,OAAP,UACE,cAACoH,GAAA,EAAMrG,MAAP,oCAGF,cAACqG,GAAA,EAAM/D,KAAP,UACE,sGAAwE,uBAAxE,qCAGF,eAAC+D,GAAA,EAAMrD,OAAP,WACE,cAACvC,EAAA,EAAD,CAAQX,QAAQ,YAAYU,QAAS,SAACmB,GAAD,OAAWwE,GAAa,IAA7D,oBACA,cAAC1F,EAAA,EAAD,CAAQX,QAAQ,SAASkE,KAAK,SAASxD,QAAS,SAACmB,GAAWwE,GAAa,GAjH9D,oCAiHsEK,CAAa7E,IAA9F,qDCtHV,SAAS8E,GAAYvH,GAAQ,IAAD,EACuDrC,GAAS,SAACO,GAAD,OAAWA,KAA7FhC,EADkB,EAClBA,KAAM6B,EADY,EACZA,MAAOM,EADK,EACLA,OAAQF,EADH,EACGA,OAAQ0B,EADX,EACWA,YAAanB,EADxB,EACwBA,SAAUM,EADlC,EACkCA,iBAC5D,OACE,qCACE,cAAC,IAAD,CAAMyB,GAAG,IAAT,kBACA,8BACE,wBAAQa,QAAS,SAAAmB,GAAK,OAAI1E,EAAM,SAAS,QAAzC,oCACA,wBAAQuD,QAAS,SAAAmB,GAAK,OAAI9G,EAAc,SAAS,SAAS,QAA1D,+BACA,wBAAQ2F,QAAS,SAAAmB,GAAK,OAAI1E,EAAM,MAAM,QAAtC,uCACA,wBAAQuD,QAAS,SAAAmB,GAAK,OAAIpE,KAA1B,uBAEF,wCAGA,6BACGF,EAAO4F,KAAI,SAAA/H,GAAC,OAAI,+BAAI,4BAAIA,EAAEsB,SAAV,IAAuBtB,EAAE7B,KAAzB,IAA+B,wBAAQmH,QAAS,SAAAkG,GAAC,OAAI3H,EAAY7D,EAAEuB,KAApC,uBAElD,2CACY,wBAAQ+D,QAAS,SAAAmB,GAAK,OAAIzD,EAAiB9C,EAAKxB,MAAQwB,EAAKpC,cAAWoB,IAAxE,gDAEZ,6BACGwD,EAASqF,KAAI,SAAA0D,GAAC,OAAI,+BAAKA,EAAE3N,SAAP,KAAmB2N,EAAE/L,gBAcjCgM,OARf,SAAiB1H,GACf,OACE,mCACE,cAACuH,GAAD,OCvBSI,OATf,SAAkB3H,GAChB,OACE,qCACE,oDAAuBA,EAAM4H,SAASC,YACtC,cAAC,IAAD,CAAMpH,GAAG,IAAT,yB,SC6CSV,OAhDf,SAAgBC,GAAQ,IAAD,EACwBrC,GAAS,SAACO,GAAD,OAAWA,KAAzDC,EADa,EACbA,OAAQ0B,EADK,EACLA,YAAaC,EADR,EACQA,YADR,EAEiB2B,mBAAS,GAF1B,mBAEbqG,EAFa,KAEDC,EAFC,KAGfC,EAAa5D,iBAAO,MA+B1B,OA5BAzC,qBAAU,WAER,OADAsG,aAAaD,EAAW1D,SACjBwD,GACL,KAAK,EACHE,EAAW1D,QAAU4D,YAAW,kBAAMH,EAAc,KAAI,KACxD,MACF,KAAK,EACHC,EAAW1D,QAAU4D,YAAW,kBAAMH,EAAc,KAAI,KACxD,MACF,KAAK,EACHjI,IAKJ,OAAO,WAAYmI,aAAaD,EAAW1D,YAC1C,CAACwD,EAAYhI,IAEhB6B,qBAAU,WACJxD,EAAO/C,OAAS,GAAG2M,EAAc,KACpC,CAAC5J,IASF,qBAAKmC,UAAU,gBAAgB6H,YAAa,SAAC1F,GAAD,OAAWsF,EAAc,IAAI7E,MAPvD,CAClB,CAACJ,UAAU,IACX,CAACA,UAAU,gCACX,CAACsF,WAAW,WAIgFN,GAA5F,SACG3J,EAAO4F,KAAI,SAAAsE,GAAK,OACf,eAACC,GAAA,EAAD,CAAsB1H,QAAQ,SAAS2H,QAAS,kBAAM1I,EAAYwI,EAAM9K,KAAKiL,aAAW,EAAxF,UACE,cAACF,GAAA,EAAMG,QAAP,UAAgBJ,EAAM/K,SACtB,4BACG+K,EAAMlO,SAHCkO,EAAM9K,UCdXmL,OAjBf,WACE,OACE,sBAAKpI,UAAU,MAAf,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqI,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjC,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWhD,IACvC,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,kBAAkBC,UAAWrC,KAC/C,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,uBAAuBC,UAAWlC,KACpD,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,SAASC,UAAWnB,KACtC,cAAC,IAAD,CAAOmB,UAAWlB,QAEpB,cAACoB,GAAD,QCdNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAS,uBAAxB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.de261db5.chunk.js","sourcesContent":["const cache = {\n  users:{}\n}\n\nconst baseURL = [\n  \"https://socialapp-api.herokuapp.com/\",\n  \"https://kwitter-api.herokuapp.com/\",\n  \"https://kwitter-api-b.herokuapp.com/\",\n][0];\n\nexport const loginRequest = (username, password) => {\n  return fetch(baseURL + \"auth/login\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const logoutRequest = (token) => {\n  return fetch(baseURL + \"auth/logout\", {\n    headers: { Authorization: \"Bearer \" + token },\n  }).then((res) => res.json());\n};\n\nexport const deleteMessage = (token, messageId) => {\n  return fetch(baseURL + \"messages/\" + messageId, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Bearer \" + token },\n  }).then((res => res.json()));\n};\n\nexport const addLike = (token, messageId) => {\n  return fetch(baseURL + \"likes\", {\n    method: \"POST\",\n    headers: { Authorization: \"Bearer \" + token, \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      messageId,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMessages = (limit, offset, username) => {\n  let queryParams = [];\n  if (limit !== undefined) queryParams.push(\"limit=\"+limit); \n  if (offset !== undefined) queryParams.push(\"offset=\"+offset);\n  if (username !== undefined) queryParams.push(\"username=\"+username);\n  queryParams = (queryParams.length === 0) ? \"\" : \"?\" + queryParams.join(\"&\");\n  return fetch(baseURL + \"messages\" + queryParams).then((res) => res.json());\n};\n\nexport const updateUser = (token, username, displayName, password, about) => {\n  return fetch(baseURL + \"users/\" + username, {\n    method: \"PATCH\",\n    headers: { Authorization: \"Bearer \" + token, \"Content-Type\": \"application/json\" }, \n    body: JSON.stringify({\n      password,\n      about,\n      displayName,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const createMessage = (token, text) => {\n  return fetch (baseURL + \"messages\", {\n    method: \"POST\",\n    headers: { Authorization: \"Bearer \" + token, \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ \n      text,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const createNewUser = (username, displayName, password) => {\n  return fetch(baseURL + \"users\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\"},\n    body: JSON.stringify({\n      username,\n      displayName,\n      password\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getUser = (username, useCache=true) => {\n  let cached = cache.users[username];\n  if (cached && useCache) return cached;\n  let request = fetch(baseURL + \"users/\" + username).then(res => res.json()).then(async (res) => {\n    res.user.pictureRaw = await getPicture(res.user.username);\n    return res;\n  });\n  cache.users[username] = request;\n  return request;\n};\n\nexport const getPicture = async (username) => {\n  let resp = await fetch(baseURL + `users/${username}/picture`)\n  if (resp.ok) {\n    return await convertBlobToBase64(await resp.blob());\n  } else {\n    return \"/placeholder.png\";\n  }\n}\n//https://gist.github.com/n1ru4l/dc99062577b746e0783410b1298ab897\nconst convertBlobToBase64 = blob => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onerror = reject;\n  reader.onload = () => {\n      resolve(reader.result);\n  };\n  reader.readAsDataURL(blob);\n});\n\nexport const deleteUser = (token, username) => {\n  return fetch(baseURL + \"users/\" + username, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Bearer \" + token },\n  }).then((res) => res.json());\n};\n\nexport const removeLike = (token, likeId) => {\n  return fetch(baseURL + \"likes/\" + likeId, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Bearer \" + token },\n  }).then((res) => res.json());\n};\n","import create from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport { getMessages, getUser, loginRequest, logoutRequest, deleteMessage, createMessage, addLike, removeLike, createNewUser, updateUser, deleteUser } from \"../fetchRequests\";\n\nconst makeAlert = function(entropy, header, body) {\n  return {\n    id: String(Number(new Date()))+entropy,\n    header,\n    body,\n  };\n}\n\n// define reducer function\nconst reducer = (set) => ({\n  //USER MANAGEMENT\n  user: {token: \"\"},\n  login: async (username, password) => {\n    let loginResp = await loginRequest(username, password);\n    if (loginResp.username) {\n      let userData = await getUser(loginResp.username, false);\n      set(state => ({user: {...loginResp, ...userData.user}}))\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error signing in\", loginResp.message)]}));\n      return false;\n    }\n  },\n  logout: async () => set(async state => { //refs previous state prefetch\n    let resp = await logoutRequest(state.user.token);\n    if (resp.statusCode === 200) {\n      set(state => ({user: {token: \"\"}}));\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error signing out\", resp.message)]}));\n      return false;\n    }\n  }),\n  signup: async (username, displayName, password) => {\n    let resp = await createNewUser(username, displayName, password);\n    if (resp.statusCode === 200) {\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error creating account\", resp.message)]}));\n      return false;\n    }\n  },\n  edit: async (token, username, displayName, password, about) => {\n    let resp = await updateUser(token, username, displayName, password, about);\n    if (resp.statusCode === 200) {\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error updating account\", resp.message)]}));\n      return false;\n    }\n  },\n  deleteAccount: async (token, username) => {\n    let resp = await deleteUser(token, username);\n    if (resp.statusCode === 200) {\n      set(state => ({user: {token: \"\"}}));\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error deleting account\", resp.message)]}));\n      return false;\n    }\n  },\n  //MESSAGES LIST MANAGEMENT\n  messages: [],\n  lastMessagesUser: undefined,\n  removeMessage: async (token, messageId) => {\n    let resp = await deleteMessage(token, messageId);\n    if (resp.statusCode === 200) {\n      set(state => ({messages:state.messages.filter(msg => msg.id !== messageId)}));\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error deleting message\", resp.message)]}));\n      return false;\n    }\n  },\n  addMessage: async (token, text) => {\n    let resp = await createMessage(token, text);\n    if (resp.statusCode === 200) {\n      set(state => ({messages:[resp.message, ...state.messages]}));\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error posting message\", resp.message)]}));\n      return false;\n    }\n  },\n  loadMoreMessages: (username) => set(async state => { //refs previous state prefetch\n    //if username has changed, use no offset and remove previous messages.\n    const differentUsername = state.lastMessagesUser !== username;\n    let resp = await getMessages(10, differentUsername ? 0 : state.messages.length, username);\n    if (resp.messages.length > 0) {\n      set(state => ({\n        messages: [...(differentUsername ? [] : state.messages), ...resp.messages],\n        lastMessagesUser: username,\n        hasMore: true\n      }));\n    } else {\n      set(state => ({hasMore: false}));\n    }\n  }),\n  clearMessages: () => set(state => ({messages:[]})),\n  hasMore: true,\n  likeMessage: async (token, messageId) => {\n    let resp = await addLike(token, messageId);\n    if (resp.statusCode === 200) {\n      set(state => {\n        let index = state.messages.findIndex(msg => msg.id === messageId);\n        let newMessage = {...state.messages[index]};\n        newMessage.likes = [...newMessage.likes, resp.like];\n        let newMessages = [...state.messages];\n        newMessages.splice(index, 1, newMessage);\n        return {messages:newMessages};\n      })\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error liking message\", resp.message)]}));\n      return false;\n    }\n  },\n  unlikeMessage: async (token, messageId, likeId) => {\n    let resp = await removeLike(token, likeId);\n    if (resp.statusCode === 200) {\n      set(state => {\n        let index = state.messages.findIndex(msg => msg.id === messageId);\n        let newMessage = {...state.messages[index]};\n        newMessage.likes = newMessage.likes.filter(like => like.id !== resp.id);\n        let newMessages = [...state.messages];\n        newMessages.splice(index, 1, newMessage);\n        return {messages:newMessages};\n      })\n      return true;\n    } else {\n      set(state => ({alerts:[...state.alerts, makeAlert(state.alerts.length, \"Error liking message\", resp.message)]}));\n      return false;\n    }\n  },\n  //ALERTS MANAGEMENT\n  alerts: [],\n  removeAlert: (id) => set(state => ({alerts:state.alerts.filter(a => a.id !== id)})),\n  clearAlerts: () => set(state => ({alerts:[]})),\n});\n\n// create useStore hook\nexport const useStore = create(devtools(reducer));\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { useStore } from \"../store/store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction Header(props) {\r\n  const user = useStore((state) => state.user);\r\n  const logout = useStore((state) => state.logout);\r\n\r\n  \r\n  function handleSignOut() {\r\n    logout();\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\r\n      <Navbar.Brand className=\"mr-auto\" as={Link} to=\"/\">Kwitter Feed</Navbar.Brand>\r\n      {user.token ? \r\n      <Dropdown className=\"invisible-dropdown\">\r\n        <Dropdown.Toggle variant=\"none\">\r\n          <div className=\"userheader\">\r\n            <div>\r\n              <Card.Title>{user.displayName || \"Display Name\"}</Card.Title>\r\n              <Card.Subtitle className=\"mb-2 text-muted\">@{user.username}</Card.Subtitle>\r\n            </div>\r\n            <img width={64} height={64} className=\"ml-3\" src={user.pictureRaw} alt=\"Profile Pic\"/>\r\n          </div>\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to={\"/user/\"+user.username}>Profile</Dropdown.Item>\r\n          <Dropdown.Item onClick={handleSignOut}>Sign Out</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      : \r\n      <Link to=\"/login\"><Button variant=\"outline-primary\">Sign In</Button></Link>\r\n    }\r\n    </Navbar>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser } from \"../fetchRequests\";\r\n\r\nfunction LikeIndicator(props) {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    getUser(props.like.username).then(resp => setUser(resp.user));\r\n  }, [props.like.username]);\r\n\r\n  return (\r\n    <OverlayTrigger delay={100} overlay={<Tooltip>@{props.like.username}</Tooltip>}>\r\n      <Link to={\"/user/\"+props.like.username}>\r\n        <img width={32} height={32} src={user.pictureRaw} alt=\"\"/>\r\n      </Link>\r\n    </OverlayTrigger>\r\n  )\r\n\r\n}\r\n// style={{transform:`translateX(-${28*i}px)`}}\r\nexport default LikeIndicator;","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { useStore } from \"../store/store\";\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser } from \"../fetchRequests\";\r\nimport LikeIndicator from \"./LikeIndicator\";\r\n\r\nfunction MessageItem(props) {\r\n  const currentUser = useStore((state) => state.user);\r\n  const { removeMessage, likeMessage, unlikeMessage } = useStore((state) => state);\r\n  const [user, setUser] = useState({});\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [liking, setLiking] = useState(false);\r\n  const [unliking, setUnliking] = useState(false);\r\n  \r\n  async function handleLike(event) {\r\n    setLiking(true);\r\n    await likeMessage(currentUser.token, props.message.id);\r\n    setLiking(false);\r\n  }\r\n\r\n  async function handleUnlike(event) {\r\n    setUnliking(true);\r\n    let likeId = props.message.likes.find(like => like.username === currentUser.username).id;\r\n    await unlikeMessage(currentUser.token, props.message.id, likeId);\r\n    setUnliking(false);\r\n  }\r\n\r\n  async function handleDelete(event) {\r\n    setDeleting(true);\r\n    if (!await removeMessage(currentUser.token, props.message.id)) {\r\n      setDeleting(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUser(props.message.username).then(resp => setUser(resp.user));\r\n  }, [props.message.username]);\r\n\r\n  function buttonSpinner(text, spin) {\r\n    if (!spin) return <span>{text}</span>\r\n    return <><Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> <span>{text}</span></>\r\n  }\r\n\r\n  function getDateString(date) {\r\n    return (\r\n      date.toLocaleDateString([], { year:'numeric', month:'short', day:'numeric' }) +\r\n      \" at \" +\r\n      date.toLocaleTimeString([], {timeStyle: 'short'})\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"message-item mt-4\" style={{opacity:deleting?0.5:1}}>\r\n        <Card.Body>\r\n          <div className=\"userheader pb-4\">\r\n            <Link to={\"/user/\"+user.username}>\r\n              <img width={64} height={64} className=\"mr-3\" src={user.pictureRaw} alt=\"\"/>\r\n            </Link>\r\n            <div>\r\n              <Link to={\"/user/\"+user.username}><Card.Title>{user.displayName}</Card.Title></Link>\r\n              <Link to={\"/user/\"+user.username}><Card.Subtitle className=\"mb-2 text-muted\">@{props.message.username}</Card.Subtitle></Link>\r\n            </div>\r\n            <div>\r\n              {props.message.username === currentUser.username && <span>\r\n                <Button variant=\"outline-danger\" onClick={handleDelete} disabled={deleting || liking || unliking} className=\"ml-2\">\r\n                  {buttonSpinner(\"Delete\", deleting)}\r\n                  </Button>\r\n              </span>}\r\n            </div>\r\n          </div>\r\n          <Card.Text className=\"mt-3\">\r\n            {props.message.text}\r\n          </Card.Text>\r\n          <Card.Text className=\"text-muted text-sm datebar\">\r\n            Posted {getDateString(new Date(props.message.createdAt))}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer className=\"likebar\">\r\n            <span className=\"text-muted mr-2\">{props.message.likes.length} Like{props.message.likes.length === 1 ? \"\" : \"s\"}</span>\r\n            <span>{props.message.likes.map((like, i) => <LikeIndicator key={\"p\"+props.message.id+\"like\"+like.id} like={like} />)}</span>\r\n            <div className=\"align-right\">\r\n              {(props.message.likes.findIndex(like => like.username === currentUser.username) !== -1 ? \r\n                <Button variant=\"outline-info\" onClick={handleUnlike} disabled={(!currentUser.token) || deleting || liking || unliking}>{buttonSpinner(\"Unlike\", unliking)}</Button>\r\n                :\r\n                <Button variant=\"success\" onClick={handleLike} disabled={(!currentUser.token) || deleting || liking || unliking}>{buttonSpinner(\"Like\", liking)}</Button>\r\n              )}\r\n            </div>\r\n          </Card.Footer>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MakeAccountCard(props) {\r\n\r\n  return (\r\n    <Card className=\"make-account-suggestion mt-4\">\r\n      <Card.Body>\r\n        <h2 className=\"mb-4 mt-4\">Want to share what's going on in your world?</h2>\r\n        <Link to=\"/signup\"><Button variant=\"primary\" size=\"lg\">Create Account</Button></Link>\r\n        <Card.Text className=\"mt-3\">\r\n          Already have one? <Link to=\"/login\">Sign In</Link>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MakeAccountCard","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useStore } from \"../store/store\";\r\n\r\nfunction MakeAccountCard(props) {\r\n  const { user, addMessage } = useStore((state) => state);\r\n  const [posting, setPosting] = useState(false);\r\n  const text = useRef();\r\n  \r\n\r\n  async function handlePost(event) {\r\n    setPosting(true);\r\n    event.preventDefault();\r\n    if (text.current.value.length >= 2 && await addMessage(user.token, text.current.value)) {\r\n      text.current.value = \"\";\r\n    };\r\n    setPosting(false);\r\n  }\r\n\r\n  function buttonSpinner(text, spin) {\r\n    if (!spin) return <span>{text}</span>\r\n    return <><Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> <span>{text}</span></>\r\n  }\r\n\r\n  return (\r\n    <Card className=\"make-post mt-4\">\r\n      <Card.Body>\r\n       <Form>\r\n          <Form.Group>\r\n            <Form.Control as=\"textarea\" size=\"lg\" rows={5} placeholder=\"Say something...\" ref={text} disabled={posting}/>\r\n          </Form.Group>\r\n          <div className=\"align-right\">\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handlePost} disabled={posting}>{buttonSpinner(\"Post\", posting)}</Button>\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MakeAccountCard","import React from \"react\";\r\nimport { useStore } from \"../store/store\";\r\nimport { useEffect } from \"react\";\r\nimport MessageItem from \"../components/MessageItem\";\r\nimport MakeAccountCard from \"../components/MakeAccountCard\";\r\nimport MakePostCard from \"../components/MakePostCard\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n\r\nfunction MessageList(props) {\r\n  const { user, messages, loadMoreMessages, clearMessages, hasMore } = useStore(state => state);\r\n\r\n  function handleScroll(event) {\r\n    loadMoreMessages(props.username);\r\n  }\r\n\r\n  function handleRefresh(event) {\r\n    clearMessages();\r\n    loadMoreMessages(props.username);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadMoreMessages(props.username);\r\n  }, [loadMoreMessages, props.username]);\r\n  \r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={messages.length} //This is important field to render the next data\r\n      next={handleScroll}\r\n      hasMore={hasMore}\r\n      loader={<Container fluid=\"md\">\r\n                <Card className=\"mt-4 mb-4 center pt-4 pb-4\">\r\n                  <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </Spinner>\r\n                </Card>\r\n              </Container>}\r\n      endMessage={<Container fluid=\"md center\">\r\n                    <Button variant=\"outline-secondary\" disabled={true} className=\"mt-4 mb-4\">You have reached the end</Button>\r\n                </Container>}\r\n      refreshFunction={handleRefresh}\r\n      pullDownToRefresh\r\n      pullDownToRefreshThreshold={50}\r\n      pullDownToRefreshContent={\r\n        <Container fluid=\"md center\">\r\n          <Button variant=\"outline-secondary\" disabled={true} className=\"mt-4 mb-4\">&#8595; Pull down to refresh</Button>\r\n        </Container>\r\n      }\r\n      releaseToRefreshContent={\r\n        <Container fluid=\"md center\">\r\n          <Button variant=\"outline-secondary\" disabled={true} className=\"mt-4 mb-4\">&#8593; Release to refresh</Button>\r\n        </Container>\r\n    }>\r\n        <Container fluid=\"md\">\r\n          {props.username ? \r\n            (user.token && props.username === user.username) ? <MakePostCard /> : \"\" //logged in on own user page\r\n            :\r\n            (user.token) ? <MakePostCard /> : <MakeAccountCard /> //logged in on homepage\r\n          }\r\n          {messages.map(msg => (\r\n            <MessageItem key={\"m\"+msg.id} message={msg}/>\r\n          ))}\r\n          \r\n          \r\n        </Container>\r\n    </InfiniteScroll>\r\n  )\r\n}\r\n\r\nexport default MessageList","import React from \"react\";\nimport Header from \"../components/Header\";\nimport MessageList from \"../components/MessageList\";\n\nfunction Home(props) {\n  return (\n  <>\n    <Header />\n    <MessageList />\n  </>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { useRef, useState } from \"react\";\nimport { useStore } from \"../store/store\";\nimport Spinner from \"react-bootstrap/Spinner\"\n\nfunction Signup(props) {\n  const [loggingIn, setLoggingIn] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const {login, signup}  = useStore((state) => state);\n\n  const username = useRef();\n  const password = useRef();\n\n  async function handleSubmit(event) {\n    setLoggingIn(true);\n    event.preventDefault();\n    if (\n      username.current.value && password.current.value &&\n      await login(username.current.value, password.current.value)\n    ) {\n      setLoggedIn(true);\n    }\n    setLoggingIn(false);\n  }\n\n  function buttonSpinner(text, spin) {\n    if (!spin) return <span>{text}</span>\n    return <><Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> <span>{text}</span></>\n  }\n\n\n  if (loggedIn)\n  return (\n    <Redirect to=\"/\" />\n  )\n\n  return (\n    <>\n     <Container fluid=\"md\" className=\"mt-5\">\n        <h1>Welcome to Kwitter!</h1>\n        <Form className=\"mt-5\">\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Username\" ref={username} disabled={loggingIn}  />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" ref={password} disabled={loggingIn} />\n          </Form.Group>\n          \n          <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} disabled={loggingIn}> \n            {buttonSpinner(\"Sign In\", loggingIn)} \n          </Button>\n        </Form>\n      </Container>\n    </>\n  );\n}\n\n\nexport default Signup;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { useRef, useState } from \"react\";\nimport { useStore } from \"../store/store\";\nimport Spinner from \"react-bootstrap/Spinner\"\n\nfunction Signup(props) {\n  const [creating, setCreating] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const {login, signup}  = useStore((state) => state);\n\n  const username = useRef();\n  const displayname = useRef();\n  const password = useRef();\n\n  async function handleSubmit(event) {\n    setCreating(true);\n    event.preventDefault();\n    if (\n      username.current.value && displayname.current.value && password.current.value &&\n      await signup(username.current.value, displayname.current.value, password.current.value) &&\n      await login(username.current.value, password.current.value)\n    ) {\n      setLoggedIn(true);\n    }\n    setCreating(false);\n  }\n\n  function buttonSpinner(text, spin) {\n    if (!spin) return <span>{text}</span>\n    return <><Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> <span>{text}</span></>\n  }\n\n\n  if (loggedIn)\n  return (\n    <Redirect to=\"/\" />\n  )\n\n  return (\n    <>\n     <Container fluid=\"md\" className=\"mt-5\">\n        <h1>Signup for Kwitter!</h1>\n        <Form className=\"mt-5\">\n          <Form.Group>\n            <Form.Label>Create Username</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Username\" ref={username} disabled={creating}  />\n            <Form.Text className=\"text-muted\">\n              This will be your unique Kwitter handle.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Display Name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Display Name\" ref={displayname} disabled={creating} />\n            \n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Create Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" ref={password} disabled={creating} />\n          </Form.Group>\n          \n          <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} disabled={creating}> \n            {buttonSpinner(\"Create Account\", creating)} \n          </Button>\n        </Form>\n      </Container>\n    </>\n  );\n}\n\n\nexport default Signup;","import React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { useStore } from \"../store/store\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Card from \"react-bootstrap/Card\";\nimport { getUser } from \"../fetchRequests\";\n\nfunction UserHeader(props) {\n  const currentUser = useStore((state) => state.user)\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    getUser(props.username).then(resp => setUser(resp.user));\n  }, [props.username]);\n\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand className=\"\" as={Link} to=\"/\">\n          <Button block variant=\"outline-secondary\">{\"❮\"}</Button>\n        </Navbar.Brand>\n        <img\n          width={128}\n          height={128}\n          className=\"ml-3 big-portrait\"\n          src={user.pictureRaw}\n          alt=\"Profile Pic\"\n        />\n        <Card.Body>\n          <div>\n            <div>\n              <Card.Title>{user.displayName}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                @{user.username}\n              </Card.Subtitle>\n            </div>\n          </div>\n          <Card.Text>{user.about}</Card.Text>\n        </Card.Body>\n        {user && currentUser.token && currentUser.username === user.username && <Link to={\"/user/\"+user.username+\"/edit\"}><Button variant=\"primary\">Edit Profile</Button></Link>}\n      </Navbar>\n    </>\n  );\n}\n\nexport default UserHeader;\n","import React from \"react\";\nimport UserHeader from \"../components/UserHeader\";\nimport MessageList from \"../components/MessageList\";\n\nfunction Userpage(props) {\n  return (\n    <>\n      <UserHeader username={props.match.params.username} />\n      <MessageList username={props.match.params.username} />\n    </>\n  );\n}\n\nexport default Userpage;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { useRef, useState } from \"react\";\nimport { useStore } from \"../store/store\";\nimport Spinner from \"react-bootstrap/Spinner\"\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction Edit(props) {\n  const [editing, setEditing] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  const { user, edit, deleteAccount, login }  = useStore((state) => state);\n\n  const username = useRef();\n  const displayName = useRef();\n  const password = useRef();\n  const about = useRef();\n\n  async function handleSubmit(event) {\n    setEditing(true);\n    event.preventDefault();\n    if (username.current.value && displayName.current.value && password.current.value && \n      await edit(user.token, username.current.value, displayName.current.value, password.current.value, about.current.value)\n    ) {\n      await login(username.current.value, password.current.value);\n      setRedirect(\"/user/\"+username.current.value);\n      }\n    setEditing(false);\n  }\n\n  async function handleDelete(event) {\n    setDeleting(true);\n    event.preventDefault();\n    if (await deleteAccount(user.token, user.username)) {\n      setRedirect(\"/\");\n    }\n    setDeleting(false);\n  }\n\n  function buttonSpinner(text, spin) {\n    if (!spin) return <span>{text}</span>\n    return <><Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> <span>{text}</span></>\n  }\n\n  useEffect(() => {\n    if (user.token) {\n      username.current.value = user.username;\n      displayName.current.value = user.displayName;\n      about.current.value = user.about;\n    } else {\n      setRedirect(\"/\");\n    }\n  }, [user])\n\n  if (redirect)\n  return (\n    <Redirect to={redirect} />\n  )\n\n  return (\n    <>\n     <Container fluid=\"md\" className=\"mt-5\">\n       <div className=\"flex-hcenter\">\n         <h1 className=\"inline-header\">Edit Your Account</h1>\n         <div className=\"align-right\">\n             <span>\n              <Button variant=\"danger\" type=\"submit\" onClick={(event) => setShowModal(true)} disabled={editing || deleting}> \n                {buttonSpinner(\"Delete Account\", deleting)} \n              </Button>\n            </span>\n          </div>\n       </div>\n        <Form className=\"mt-5\">\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Username\" ref={username} readOnly  />\n            <Form.Text className=\"text-muted\">\n              You can't change your unique Kwitter handle\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>New Display Name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Display Name\" ref={displayName} disabled={editing || deleting} />\n            \n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" ref={password} disabled={editing || deleting} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>New Bio</Form.Label>\n            <Form.Control as=\"textarea\" rows={5} placeholder=\"About me\" ref={about} disabled={editing || deleting}/>\n          </Form.Group>\n\n          <div className=\"align-right\">\n            <Button variant=\"primary\" className=\"mr-2\" type=\"submit\" onClick={handleSubmit} disabled={editing || deleting}> \n              {buttonSpinner(\"Save\", editing)} \n            </Button>\n            <Button variant=\"secondary\" type=\"cancel\" onClick={(event) => setRedirect(\"/user/\"+user.username)} disabled={editing || deleting}> \n              Cancel\n            </Button>\n          </div>\n        </Form>\n      </Container>\n      <Modal show={showModal} onHide={(event) => setShowModal(false)}>\n        <Modal.Header>\n          <Modal.Title>Delete your account</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>This will delete your account, all your messages, and all your likes.<br />This action cannot be undone.</p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={(event) => setShowModal(false)}>Cancel</Button>\n          <Button variant=\"danger\" type=\"submit\" onClick={(event) => {setShowModal(false); handleDelete(event)}}>Permanently Delete My Account</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nexport default Edit;","import React from \"react\";\r\nimport { useStore } from \"../store/store\";\r\nimport { createNewUser } from \"../fetchRequests\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction StoreTester(props) {\r\n  const { user, login, logout, alerts, removeAlert, messages, loadMoreMessages } = useStore((state) => state);\r\n  return (\r\n    <>\r\n      <Link to=\"/\">Home</Link>\r\n      <p>\r\n        <button onClick={event => login(\"amogus\",\"sus\")}>Log in to test account</button>\r\n        <button onClick={event => createNewUser(\"amogus\",\"AMOGUS\",\"sus\")}>Make test account</button>\r\n        <button onClick={event => login(\"bad\",\"bad\")}>Log in to account bad:bad</button>\r\n        <button onClick={event => logout()}>logout</button>\r\n      </p>\r\n      <p>\r\n        Alerts:\r\n      </p>\r\n      <ul>\r\n        {alerts.map(a => <li><b>{a.header}</b> {a.body} <button onClick={e => removeAlert(a.id)}>x</button></li>)}\r\n      </ul>\r\n      <p>\r\n        Messages: <button onClick={event => loadMoreMessages(user.token ? user.username : undefined)}>Load 10 more for logged in user</button>\r\n      </p>\r\n      <ul>\r\n        {messages.map(m => <li>{m.username}: {m.text}</li>)}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TestHub(props) {\r\n  return (\r\n    <>\r\n      <StoreTester />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestHub;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFound(props) {\n  return (\n    <>\n      <p>Page not found for {props.location.pathname}</p>\n      <Link to=\"/\">Go Home</Link>\n    </>\n  );\n}\n\nexport default NotFound;\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { useStore } from \"../store/store\";\r\n\r\nfunction Header(props) {\r\n  const { alerts, removeAlert, clearAlerts } = useStore((state) => state);\r\n  const [ clearStage, setClearStage ] = useState(0);\r\n  const stageTimer = useRef(null);\r\n\r\n  //STAGE STATE MACHINE\r\n  useEffect(() => {\r\n    clearTimeout(stageTimer.current);\r\n    switch(clearStage) {\r\n      case 0: // Idle/reset - triggered by a new non-empty alert list or mouse movement. Clears fade animation.\r\n        stageTimer.current = setTimeout(() => setClearStage(1), 1000);\r\n        break;\r\n      case 1: // Fading - animation makes first half solid and last half fade out\r\n        stageTimer.current = setTimeout(() => setClearStage(2), 10000);\r\n        break;\r\n      case 2: // Emptied\r\n        clearAlerts();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return function() {clearTimeout(stageTimer.current)}\r\n  }, [clearStage, clearAlerts])\r\n\r\n  useEffect(() => {\r\n    if (alerts.length > 0) setClearStage(0);\r\n  }, [alerts]);\r\n\r\n  const stageStyles = [\r\n    {animation:\"\"},\r\n    {animation:\"fade-out 10s linear forwards\"},\r\n    {visibility:\"hidden\"}\r\n  ]\r\n\r\n  return (\r\n    <div className=\"alerts-modals\" onMouseMove={(event) => setClearStage(0)} style={stageStyles[clearStage]}>\r\n      {alerts.map(alert => (\r\n        <Alert key={alert.id} variant=\"danger\" onClose={() => removeAlert(alert.id)} dismissible>\r\n          <Alert.Heading>{alert.header}</Alert.Heading>\r\n          <p>\r\n            {alert.body}\r\n          </p>\r\n        </Alert>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","import { Switch, Route } from \"react-router-dom\";\nimport Home from \"./views/Home\";\nimport Login from \"./views/Login\";\nimport Signup from \"./views/Signup\";\nimport Userpage from \"./views/Userpage\";\nimport Edit from \"./views/Edit\";\nimport TestHub from \"./views/TestHub\";\nimport NotFound from \"./views/NotFound\";\nimport AlertsModals from \"./components/AlertsModals\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/user/:username\" component={Userpage} />\n        <Route exact path=\"/user/:username/edit\" component={Edit} />\n        <Route exact path=\"/debug\" component={TestHub} />\n        <Route component={NotFound} />\n      </Switch>\n      <AlertsModals />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"kwitter-infinitymeme\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}